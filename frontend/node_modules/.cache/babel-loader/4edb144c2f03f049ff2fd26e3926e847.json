{"ast":null,"code":"var _jsxFileName = \"D:\\\\Documents\\\\Google Drive\\\\GitHub\\\\CadastroAgil-AGICAD\\\\frontend\\\\src\\\\pages\\\\servicoPrestado\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { Link, useParams, useHistory } from \"react-router-dom\";\nimport \"./styles.css\";\nimport logoImage from \"../../assets/images/builder.svg\";\nimport api from \"../../services/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ServicoPrestado = () => {\n  _s();\n\n  const [codigo_servico, setCodigo] = useState(null);\n  const [nome_servico, setNome] = useState(\"\");\n  const [descricao_servico, setDescricao] = useState(\"\");\n  const [servico, setServico] = useState({\n    codigo_servico: 0,\n    nome_servico: \"\"\n  });\n  const [servicos, setServicos] = useState([]);\n  const [usuario, setUsuario] = useState({\n    codigo_usuario: 0,\n    nome_usuario: \"\"\n  });\n  const [usuarios, setUsuarios] = useState([]);\n  const [prestador, setPrestador] = useState({\n    codigo_prestador: 0,\n    endereco_prestador: \"\",\n    usuario: usuario\n  });\n  const [prestadores, setPrestadores] = useState([]);\n  const {\n    servPresId\n  } = useParams();\n  const token = localStorage.getItem(\"token\");\n  const history = useHistory();\n\n  async function getServicoPrestado() {\n    try {\n      const response = await api.get(`/v1/agicad/servicos/${servPresId}`);\n      setCodigo(response.data.codigo_servico);\n      setNome(response.data.nome_servico);\n      setDescricao(response.data.descricao_servico);\n    } catch (error) {\n      alert(\"Erro na busca do serviço. Tente novamente \" + error);\n      history.push(\"/servicos\");\n    }\n  }\n\n  useEffect(() => {\n    if (servPresId == \"0\") return;else getServicoPrestado();\n  }, [servPresId]);\n\n  async function saveOrUpdate(e) {\n    e.preventDefault();\n    const data = {\n      codigo_servico,\n      nome_servico,\n      descricao_servico\n    };\n\n    try {\n      if (servPresId == \"0\") {\n        await api.post(`v1/agicad/servicos`, data, {});\n      } else {\n        data.codigo_servico = codigo_servico;\n        await api.post(`v1/agicad/servicos`, data, {});\n      }\n\n      history.push(\"/servicos\");\n    } catch (error) {\n      alert(\"Erro na inclusão do serviço. \" + error + \" Tente novamente!\");\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"new-serv-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: [/*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"form\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Cadastro de Servi\\xE7os!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: logoImage,\n          alt: \"Gest\\xE3o de Obras\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [servPresId == \"0\" ? \"Adicionar\" : \"Atualizar\", \" Servi\\xE7o\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Entre com as informa\\xE7\\xF5es do servi\\xE7o e clique em Adicionar! Ou clique em Listar para ver os servi\\xE7os cadastrados.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: saveOrUpdate,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"Nome do Servi\\xE7o\",\n          value: nome_servico,\n          onChange: e => setNome(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"E-mail do Servi\\xE7o\",\n          value: descricao_servico,\n          onChange: e => setDescricao(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          type: \"submit\",\n          children: servPresId == \"0\" ? \"Adicionar\" : \"Atualizar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/servicos\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"button\",\n            children: \" Listar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ServicoPrestado, \"e0NkqXIMQQpm4WvTPo8lr7IG1p4=\", false, function () {\n  return [useParams, useHistory];\n});\n\n_c = ServicoPrestado;\nexport default ServicoPrestado;\n\nvar _c;\n\n$RefreshReg$(_c, \"ServicoPrestado\");","map":{"version":3,"sources":["D:/Documents/Google Drive/GitHub/CadastroAgil-AGICAD/frontend/src/pages/servicoPrestado/index.tsx"],"names":["useEffect","useState","Link","useParams","useHistory","api","ServicoPrestado","codigo_servico","setCodigo","nome_servico","setNome","descricao_servico","setDescricao","servico","setServico","servicos","setServicos","usuario","setUsuario","codigo_usuario","nome_usuario","usuarios","setUsuarios","prestador","setPrestador","codigo_prestador","endereco_prestador","prestadores","setPrestadores","servPresId","token","localStorage","getItem","history","getServicoPrestado","response","get","data","error","alert","push","saveOrUpdate","e","preventDefault","post","logoImage","target","value"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { Link, useParams, useHistory } from \"react-router-dom\";\r\nimport \"./styles.css\";\r\nimport logoImage from \"../../assets/images/builder.svg\";\r\nimport api from \"../../services/api\";\r\n\r\ntype serv = {\r\n  codigo_servico: number;\r\n  nome_servico: string;\r\n}\r\ntype usu = {\r\n  codigo_usuario: number;\r\n  nome_usuario: string;\r\n}\r\n\r\ntype pres = {\r\n  codigo_prestador: number;\r\n  endereco_prestador: string;\r\n  usuario: usu;\r\n}\r\n\r\nconst ServicoPrestado: React.FC = () => {\r\n  const [codigo_servico, setCodigo] = useState(null);\r\n  const [nome_servico, setNome] = useState(\"\");\r\n  const [descricao_servico, setDescricao] = useState(\"\");\r\n\r\n  const [servico, setServico] = useState<serv>({\r\n    codigo_servico: 0,\r\n    nome_servico: \"\",\r\n  });\r\n  const [servicos, setServicos] = useState<serv[]>([]);\r\n\r\n  const [usuario, setUsuario] = useState<usu>({\r\n    codigo_usuario: 0,\r\n    nome_usuario: \"\",\r\n  });\r\n  const [usuarios, setUsuarios] = useState<usu[]>([]);\r\n\r\n  const [prestador, setPrestador] = useState<pres>({\r\n    codigo_prestador: 0,\r\n    endereco_prestador: \"\",\r\n    usuario: usuario\r\n  });\r\n  const [prestadores, setPrestadores] = useState<pres[]>([]);\r\n\r\n  const { servPresId } = useParams() as any;\r\n\r\n  const token = localStorage.getItem(\"token\");\r\n\r\n  const history = useHistory();\r\n\r\n  async function getServicoPrestado() {\r\n    try {\r\n      const response = await api.get(`/v1/agicad/servicos/${servPresId}`);\r\n\r\n      setCodigo(response.data.codigo_servico);\r\n      setNome(response.data.nome_servico);\r\n      setDescricao(response.data.descricao_servico);\r\n    } catch (error) {\r\n      alert(\"Erro na busca do serviço. Tente novamente \" + error);\r\n      history.push(\"/servicos\");\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (servPresId == \"0\") return;\r\n    else getServicoPrestado();\r\n  }, [servPresId]);\r\n\r\n  async function saveOrUpdate(e: any) {\r\n    e.preventDefault();\r\n\r\n    const data = {\r\n      codigo_servico,\r\n      nome_servico,\r\n      descricao_servico,\r\n    };\r\n\r\n    try {\r\n      if (servPresId == \"0\") {\r\n        await api.post(`v1/agicad/servicos`, data, {\r\n        });\r\n      } else {\r\n        data.codigo_servico = codigo_servico;\r\n        await api.post(`v1/agicad/servicos`, data, {\r\n        });\r\n      }\r\n      history.push(\"/servicos\");\r\n    } catch (error) {\r\n      alert(\r\n        \"Erro na inclusão do serviço. \" + error + \" Tente novamente!\"\r\n      );\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"new-serv-container\">\r\n      <div className=\"content\">\r\n        <section className=\"form\">\r\n          <h2>Cadastro de Serviços!</h2>\r\n          <img src={logoImage} alt=\"Gestão de Obras\" />\r\n          <h3>{servPresId == \"0\" ? \"Adicionar\" : \"Atualizar\"} Serviço</h3>\r\n          <p>\r\n            Entre com as informações do serviço e clique em Adicionar! Ou\r\n            clique em Listar para ver os serviços cadastrados.\r\n          </p>\r\n        </section>\r\n        <form onSubmit={saveOrUpdate}>\r\n          <input\r\n            placeholder=\"Nome do Serviço\"\r\n            value={nome_servico}\r\n            onChange={(e) => setNome(e.target.value)}\r\n          />\r\n          <input\r\n            placeholder=\"E-mail do Serviço\"\r\n            value={descricao_servico}\r\n            onChange={(e) => setDescricao(e.target.value)}\r\n          />\r\n          <button className=\"button\" type=\"submit\">\r\n            {servPresId == \"0\" ? \"Adicionar\" : \"Atualizar\"}\r\n          </button>\r\n          <Link to=\"/servicos\">\r\n            <button className=\"button\"> Listar</button>\r\n          </Link>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ServicoPrestado;\r\n"]},"metadata":{},"sourceType":"module"}